services:
  namenode:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        API_PORT: ${NAMENODE_PORT}
    container_name: dfs_namenode
    env_file:
      - ./.env
    environment:
      - ROLE=${NAMENODE_ROLE}
    ports:
      - ${NAMENODE_PORT}:7000
    volumes:
      - namenode_data:/app/namenode

  namenode_backup:
    depends_on:
      - namenode
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        API_PORT: ${NAMENODE_BACKUP_PORT}
    container_name: dfs_namenode_backup
    env_file:
      - ./.env
    environment:
      - ROLE=${NAMENODE_BACKUP_ROLE}
    ports:
      - ${NAMENODE_BACKUP_PORT}:7001
    volumes:
      - namenode_backup_data:/app/namenode_backup

  datanode1:
    depends_on:
      - namenode_backup
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        API_PORT: ${DATANODE_PORT1}
    container_name: dfs_datanode1
    env_file:
      - ./.env
    environment:
      - ROLE=${DATANODE_ROLE}
      - DATANODE_PORT=${DATANODE_PORT1}
    ports:
      - ${DATANODE_PORT1}:3000
    volumes:
      - ./datanode_data_1:/app/datanode

  datanode2:
    depends_on:
      - namenode_backup
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        API_PORT: ${DATANODE_PORT2}
    container_name: dfs_datanode2
    env_file:
      - ./.env
    environment:
      - ROLE=${DATANODE_ROLE}
      - DATANODE_PORT=${DATANODE_PORT2}
    ports:
      - ${DATANODE_PORT2}:3001
    volumes:
      - ./datanode_data_2:/app/datanode

volumes:
  namenode_data:
  namenode_backup_data:
  datanode_data_1:
  datanode_data_2:
